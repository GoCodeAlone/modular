reverseproxy:
  backend_services:
    backend1: "http://backend1.example.com"
    backend2: "http://backend2.example.com"
  default_backend: "backend1"
  # Health check configuration
  health_check:
    enabled: true
    interval: "30s"
    timeout: "5s"
    recent_request_threshold: "60s"
    expected_status_codes: [200, 204]
    health_endpoints:
      backend1: "/health"
      backend2: "/api/health"
    backend_health_check_config:
      backend1:
        enabled: true
        interval: "15s"
        timeout: "3s"
        expected_status_codes: [200]
      backend2:
        enabled: true
        endpoint: "/status"
        interval: "45s"
        timeout: "10s"
        expected_status_codes: [200, 201]
  # Backend configurations with feature flags
  backend_configs:
    backend1:
      feature_flag_id: "backend1-feature"  # Feature flag that controls this backend
      alternative_backend: "backend2"      # Fall back to backend2 if flag is disabled
    backend2:
      feature_flag_id: "backend2-feature"
      alternative_backend: "backend1"
  # Example composite routes configuration with feature flags
  composite_routes:
    "/api/composite/data":
      pattern: "/api/composite/data"
      backends:
        - "backend1"
        - "backend2"
      strategy: "merge"
      feature_flag_id: "composite-feature"  # Feature flag for this composite route
      alternative_backend: "backend1"        # Fall back to single backend if disabled
